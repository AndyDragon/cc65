# sym1-32k.cfg   (32k)
#
# for Sym-1 with 32kb RAM
#
# ld65 --config sym1-32k.cfg -o <prog>.bin <prog>.o

FEATURES {
    STARTADDRESS: default     = $0200;
    CONDES:    segment        = STARTUP,
               type           = constructor,
               label          = __CONSTRUCTOR_TABLE__,
               count          = __CONSTRUCTOR_COUNT__;
    CONDES:    segment        = STARTUP,
               type           = destructor,
               label          = __DESTRUCTOR_TABLE__,
               count          = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    __STACKSIZE__:      type  = weak,   value = $0200;   # 512 byte program stack
    __STARTADDRESS__:   type  = export, value = %S;
}

MEMORY {
        ZP:             start = $0000,  size = $00F7,                      define = yes,   file = %O;
        CPUSTACK:       start = $0100,  size = $0100,                      define = yes;
        RAM:            start = %S,     size = $8000 - %S - __STACKSIZE__, define = yes,   file = %O;
        MONROM:         start = $8000,  size = $1000,                      define = yes;
        EXT:            start = $9000,  size = $1000,                      define = yes;
        IO:             start = $A000,  size = $1000,                      define = yes;
        RAE1:           start = $B000,  size = $1000,                      define = yes;
        BASROM:         start = $C000,  size = $1000,                      define = yes;
        RAE2:           start = $E000,  size = $1000,                      define = yes;
        TOP:            start = $F000,  size = $1000,                      define = yes;
}

SEGMENTS {
        ZEROPAGE:       load = ZP,      type = zp,                         define = yes;
        STARTUP:        load = RAM,     type = ro,                         define = yes;
        CODE:           load = RAM,     type = ro,                         define = yes;
        RODATA:         load = RAM,     type = ro,                         define = yes;
        ONCE:           load = RAM,     type = ro,                         define = yes;
        DATA:           load = RAM,     type = rw,                         define = yes;
        BSS:            load = RAM,     type = bss,                        define = yes;
}

